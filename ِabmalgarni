from flask import Flask, render_template, request, redirect, url_for, session
import sqlite3
import os

app = Flask(__name__)
app.secret_key = 'your_secret_key'

# Database setup
def init_db():
    with sqlite3.connect("database.db") as conn:
        cursor = conn.cursor()
        cursor.execute('''CREATE TABLE IF NOT EXISTS users (
                          id INTEGER PRIMARY KEY AUTOINCREMENT,
                          username TEXT UNIQUE,
                          password TEXT,
                          role TEXT)''')
        cursor.execute('''CREATE TABLE IF NOT EXISTS referrals (
                          id INTEGER PRIMARY KEY AUTOINCREMENT,
                          sender TEXT,
                          receiver TEXT,
                          patient_name TEXT,
                          patient_id TEXT,
                          details TEXT,
                          status TEXT DEFAULT 'New')''')
        conn.commit()

# Initialize the database
init_db()

@app.route('/')
def index():
    if 'username' in session:
        return redirect(url_for('dashboard'))
    return render_template('login.html')

@app.route('/login', methods=['POST'])
def login():
    username = request.form['username']
    password = request.form['password']
    
    with sqlite3.connect("database.db") as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM users WHERE username = ? AND password = ?", (username, password))
        user = cursor.fetchone()
        
        if user:
            session['username'] = user[1]
            session['role'] = user[3]
            return redirect(url_for('dashboard'))
        else:
            return render_template('login.html', error="Invalid credentials! Try again.")

@app.route('/dashboard')
def dashboard():
    if 'username' not in session:
        return redirect(url_for('index'))
    
    with sqlite3.connect("database.db") as conn:
        cursor = conn.cursor()
        if session['role'] == 'sender':
            cursor.execute("SELECT * FROM referrals WHERE sender = ?", (session['username'],))
        else:
            cursor.execute("SELECT * FROM referrals")
        referrals = cursor.fetchall()
    
    return render_template('dashboard.html', referrals=referrals, role=session['role'])

@app.route('/logout')
def logout():
    session.pop('username', None)
    return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000, debug=True)
